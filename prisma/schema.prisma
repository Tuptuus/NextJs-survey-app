generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Survey {
  id             String     @id @default(cuid()) @map("_id")
  surveyToUserID String
  title          String
  description    String
  createdAt      String
  questions      Question[]
  Response       Response[]
}

model Question {
  id         String   @id @default(cuid()) @map("_id")
  title      String
  isRequired Boolean
  surveyId   String
  survey     Survey   @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  type       Type     @default(SHORTTEXT)
  options    Option[]
  Answer     Answer[]
}

enum Type {
  SHORTTEXT
  LONGTEXT
  MULTICHOICE
  SINGLECHOICE
}

model Option {
  id         String    @id @default(cuid()) @map("_id")
  text       String?
  question   Question? @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String?
}

model User {
  id            String     @id @default(cuid()) @map("_id")
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  Response      Response[]
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Response {
  id       String   @id @default(cuid()) @map("_id")
  userId   String?
  surveyId String
  survey   Survey   @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  user     User?    @relation(fields: [userId], references: [id])
  Answer   Answer[]
}

model Answer {
  id            String   @id @default(cuid()) @map("_id")
  responseId    String
  questionId    String
  answerText    String?
  answerOptions String[]
  response      Response @relation(fields: [responseId], references: [id])
  question      Question @relation(fields: [questionId], references: [id])
}
